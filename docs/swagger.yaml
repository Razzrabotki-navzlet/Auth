basePath: /
definitions:
  repository.ChangePasswordRequest:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    type: object
  repository.ChangeRoleRequest:
    properties:
      current_role:
        type: integer
      new_role:
        type: integer
      user_id:
        type: integer
    type: object
  repository.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  repository.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
host: localhost:7070
info:
  contact: {}
  description: This is a sample API documentation using Swagger.
  title: API
  version: "123.123"
paths:
  /api/update-user-role:
    put:
      consumes:
      - application/json
      operationId: change-user-role
      parameters:
      - description: user info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/repository.ChangeRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Изменение роли пользователя
      tags:
      - users
  /api/user-role:
    get:
      operationId: user-role
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Информация о роли пользователя
      tags:
      - users
  /api/user/change-password:
    put:
      consumes:
      - application/json
      operationId: password-change
      parameters:
      - description: Ols and new passwords
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/repository.ChangePasswordRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Смена пароля
      tags:
      - users
  /api/user/current:
    get:
      description: Получение информации о текущем пользователе по токену
      operationId: info-user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Информация о пользователе
      tags:
      - users
  /auth/create-user:
    post:
      consumes:
      - application/json
      description: Создание пользователя
      operationId: register-user
      parameters:
      - description: user info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/repository.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Регистрация
      tags:
      - users
  /auth/login:
    post:
      consumes:
      - application/json
      description: Получение JWT
      operationId: login-user
      parameters:
      - description: user info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/repository.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Логин
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
